




1) Create snapshots of the code in case something goes wrong
2) Test the project in VS
3) Look into TSD definitions file... what is it for???





Demo App

Switch to using enum for current view???






Update migration notes for new app

!!! Update the api.js file in the demo-app project






Get this working... then think about how this could be converted to TS
  What features can I highlight???
    Type Definition Files
    Classes
    Modules
    Debugging
    Refactoring
  What features can't I highlight??? What code would I need to add to do so???
    Interfaces... sigh... how can I incorporate interfaces???
      Define interface for the API
      Implement twice
      Inject into the view models
    Arrow functions???
    Properties

What are the improvements that we are making along the way???

Build in a couple of bugs that will be discovered when migrating to TS





Add jQuery validations???

Use Toastr for notifications???








Editors

  Start in VS???
  Then move to Atom???

  Should I keep it simple and just stay in one editor???
  What do I give up if I don't use VS???



Modules

  AMD (Asynchronous Module Definition) - RequireJS
  CommonJS - Browserify??? (also Node.js)

  The primary differences between CommonJS and AMD are as follows:

  CommonJS is synchronous in nature; AMD loads files asynchronously
  CommonJS is primarily used on the server in conjunction with node; AMD is most useful in the browser and its most popular implementation is RequireJS.

  You can configure the TS compiler to combine all compiled JS into a single file

  Information on file globbing
  	http://gruntjs.com/configuring-tasks#globbing-patterns
  		"All most people need to know is that foo/*.js will match all files ending with .js in the foo/ subdirectory, but foo/**/*.js will match all files ending with .js in the foo/ subdirectory and all of its subdirectories."
